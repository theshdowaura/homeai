name: Release

on:
  push:
    tags:
      - 'v*' # 当推送带有 'v' 前缀的 tag 时触发 workflow

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        goos: [linux, darwin, windows]
        goarch: ["amd64", "386", "arm64"]
        exclude:
          - os: macos-latest
            goarch: 386
          - os: windows-latest
            goarch: 386
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.5'

      - name: Get version from tag
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build
        run: |
          go mod init main
          go mod tidy
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o homeai_${{ matrix.goos }}_${{ matrix.goarch }}_${{ env.VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: matrix.os == 'ubuntu-latest' && matrix.goarch == 'amd64'
        env:
          GITHUB_TOKEN: ${{ secrets.HOMEAI_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.HOMEAI_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: homeai_${{ matrix.goos }}_${{ matrix.goarch }}_${{ env.VERSION }}
          asset_name: homeai_${{ matrix.goos }}_${{ matrix.goarch }}_${{ env.VERSION }}
          asset_content_type: application/octet-stream
